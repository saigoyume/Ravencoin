policy_module(carrot, 1.100.1)

########################################
#
# Declarations
#

type carrot_t;
type carrot_exec_t;
init_daemon_domain(carrot_t, carrot_exec_t)

permissive carrot_t;

type carrot_initrc_exec_t;
init_script_file(carrot_initrc_exec_t)

type carrot_conf_t;
files_type(carrot_conf_t)

type carrot_var_lib_t;
files_type(carrot_var_lib_t)

type carrot_var_run_t;
files_type(carrot_var_run_t)

type carrot_port_t;
corenet_port(carrot_port_t)

########################################
#
# carrot local policy
#
allow carrot_t self:process { fork };

allow carrot_t self:fifo_file rw_fifo_file_perms;
allow carrot_t self:unix_stream_socket create_stream_socket_perms;

manage_dirs_pattern(carrot_t, carrot_conf_t, carrot_conf_t)
manage_files_pattern(carrot_t, carrot_conf_t, carrot_conf_t)

manage_dirs_pattern(carrot_t, carrot_var_lib_t, carrot_var_lib_t)
manage_files_pattern(carrot_t, carrot_var_lib_t, carrot_var_lib_t)
files_var_lib_filetrans(carrot_t, carrot_var_lib_t, { dir file })

manage_dirs_pattern(carrot_t, carrot_var_run_t, carrot_var_run_t)
manage_files_pattern(carrot_t, carrot_var_run_t, carrot_var_run_t)

sysnet_dns_name_resolve(carrot_t)
corenet_all_recvfrom_unlabeled(carrot_t)

allow carrot_t self:tcp_socket create_stream_socket_perms;
corenet_tcp_sendrecv_generic_if(carrot_t)
corenet_tcp_sendrecv_generic_node(carrot_t)
corenet_tcp_sendrecv_all_ports(carrot_t)
corenet_tcp_bind_generic_node(carrot_t)

gen_require(`
    type carrot_port_t;
')
allow carrot_t carrot_port_t:tcp_socket name_bind;

gen_require(`
    type carrot_port_t;
')
allow carrot_t carrot_port_t:tcp_socket name_connect;

domain_use_interactive_fds(carrot_t)

files_read_etc_files(carrot_t)

miscfiles_read_localization(carrot_t)

sysnet_dns_name_resolve(carrot_t)

allow carrot_t carrot_exec_t:file execute_no_trans;
allow carrot_t self:process setsched;
corecmd_exec_ls(carrot_t)
corenet_tcp_connect_http_port(carrot_t)
dev_read_urand(carrot_t)
fs_getattr_xattr_fs(carrot_t)
kernel_read_system_state(carrot_t)
